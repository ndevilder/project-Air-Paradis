import streamlit as st
import requests
from bs4 import BeautifulSoup  # Pour extraire les donn√©es HTML si n√©cessaire

# URL de ton API FastAPI
API_URL = "http://13.53.129.120/predict"

# Titre de l'application
st.title("Tweet sentiment prediction")

# Champ de saisie pour entrer un texte
user_input = st.text_area("Enter your text and click on the predict button", "")

# Bouton pour soumettre le texte
if st.button("üîç Predict"):
    if user_input.strip() != "":
        # Envoyer la requ√™te √† l'API
        response = requests.post(API_URL, data={"text": user_input})

        if response.status_code == 200:
            # Parser la r√©ponse HTML pour extraire la pr√©diction
            soup = BeautifulSoup(response.text, "html.parser")

            # Extraire la pr√©diction (ici bas√©e sur le format de ton HTML)
            prediction = soup.find("p", class_="prediction")  # Cherche le <p> contenant la pr√©diction
            prediction_text = prediction.get_text().replace("Prediction:", "").strip() if prediction else "Non trouv√©"

            # Afficher le r√©sultat proprement
            st.subheader("Prediction Result :")
            st.write(f" **Prediction: ** {prediction_text}")

            # Boutons de feedback
            st.write("üì¢ **please give us a feedback**")
            col1, col2 = st.columns(2)
            with col1:
                if st.button("‚úÖ Correct"):
                    requests.post("http://13.53.129.120/feedback", data={"correct": "1"})
                    st.success("Merci pour votre feedback !")
            with col2:
                if st.button("‚ùå Incorrect"):
                    requests.post("http://13.53.129.120/feedback", data={"correct": "0"})
                    st.warning("Merci, votre retour a √©t√© pris en compte !")

        else:
            st.error("‚ùå Erreur : Impossible de contacter l'API.")
    else:
        st.warning("‚ö†Ô∏è The submitted text is empty. Please enter valid text..")
