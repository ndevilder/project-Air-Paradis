name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupération du code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Lister les fichiers pour débogage
    - name: List project files
      run: ls -R

    # Étape 3 : Installer Python et les dépendances pour les tests
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov httpx

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

    - name: Create config.yaml for tests
      run: |
        echo "negative_feedback_limit: 10" > config.yaml
        echo "negative_feedback_window_minutes: 5" >> config.yaml
        echo "use_aws: false" >> config.yaml
        echo "model_dir: distilbert-base-uncased" >> config.yaml
        echo "cloudwatch_metric_name: NegativeFeedbackCount" >> config.yaml
        echo "cloudwatch_namespace: MyApp/Feedback" >> config.yaml

    # Étape 4 : Exécuter les tests
    - name: Run tests with pytest
      run: pytest --cov=. --cov-report=xml

    # Étape 5 : Installation propre de Docker et containerd
    - name: Clean and install Docker
      run: |
        sudo apt-get remove --purge -y containerd containerd.io || true
        sudo apt-get autoremove -y
        sudo apt-get autoclean
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    - name: Start Docker service
      run: |
        sudo systemctl start docker
        sudo systemctl enable docker
        docker --version
        systemctl status containerd

    # Étape 6 : Construire et pousser l'image Docker
    - name: Build Docker image
      run: |
        sudo docker build -t fastapi-app .
        sudo docker tag fastapi-app dralakh/airparadis:latest

    - name: Push Docker Image to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push dralakh/airparadis:latest

    # Étape 7 : Déployer sur EC2
    - name: Deploy to EC2
      run: |
        ssh -i "${{ secrets.EC2_KEY }}" -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo docker pull dralakh/airparadis:latest
          sudo docker stop fastapi-app || true
          sudo docker rm fastapi-app || true
          sudo docker run -d --name fastapi-app -p 80:80 dralakh/airparadis:latest
          echo "Docker container deployed successfully."
        EOF

    # Étape 8 : Vérification du déploiement
    - name: Test deployment
      run: |
        ssh -i "${{ secrets.EC2_KEY }}" -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} curl -f http://127.0.0.1:80 || (echo "Deployment failed." && exit 1)
